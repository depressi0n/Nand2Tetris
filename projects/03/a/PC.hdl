// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // 使用一个Register存储原始数据，然后等待时钟脉冲
    // 还需要提供重置/加载功能
    // 使用3个选择器（reset、inc、load），根据前面的IF逻辑反写
    // 首先使用Register中的结果加1
    Inc16(in=feedback,out=incout);
    // 根据inc位选择
    Mux16(a=feedback,b=incout,sel=inc,out=one);
    // 然后根据load确定是否加载in到Register中
    Mux16(a=one,b=in,sel=load,out=two);
    // 根据reset确定是否清除（优先级最高）
    Mux16(a=two,b=false,sel=reset,out=three);
    // 寄存器的load位常开即可，因为也需要读出数据
    Register(in=three,load=true,out=feedback,out=out);

}
