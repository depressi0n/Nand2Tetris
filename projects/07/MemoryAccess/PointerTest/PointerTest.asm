@3030
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M // 取出栈顶数据
@SP
M=M-1
@R3
M=D
@3040
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M // 取出栈顶数据
@SP
M=M-1
@R4
M=D
@32
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R3
D=D+M
@SP
A=M
M=D // 使用栈顶存放位置信息
@SP
A=M-1
D=M
@SP
A=M
A=M
M=D
@SP
M=M-1
@46
D=A
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@R4
D=D+M
@SP
A=M
M=D // 使用栈顶存放位置信息
@SP
A=M-1
D=M
@SP
A=M
A=M
M=D
@SP
M=M-1
@R3
D=M // 取出this当前指向的地址
@SP
A=M
M=D // 压入栈中
@SP
M=M+1
@R4
D=M // 取出this当前指向的地址
@SP
A=M
M=D // 压入栈中
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R3
A=D+M
D=M // 取出local[index]的数据
@SP
A=M
M=D // 压入栈中
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@R4
A=D+M
D=M // 取出local[index]的数据
@SP
A=M
M=D // 压入栈中
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
(END)
	@END
	0;JMP